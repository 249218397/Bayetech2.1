<#@ template language="C#" debug="True" #>
<#@ assembly name="System.Core" #>
<#@ Assembly Name="$(SolutionDir)\Bayetech.DAL\bin\Debug\EntityFramework.dll" #>
<#@ Assembly Name="$(SolutionDir)\Bayetech.DAL\bin\Debug\EntityFramework.SqlServer.dll" #>
<#@ Assembly Name="$(SolutionDir)\Bayetech.DAL\bin\Debug\Bayetech.DAL.dll" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Bayetech.DAL.Entity" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="ServicesTemplate.ttinclude" #>
<#@ include file="IServicesTemplate.ttinclude" #>

<#   
    Assembly assembly = typeof(BayetechEntities).Assembly;
	    //Type[] modelTypes = assembly.GetTypes();
	    Type[] modelTypes = assembly.GetTypes().Where(tj=>tj.Namespace=="JMS.DataModel").ToArray();
    var currentPath = Path.GetDirectoryName(Host.TemplateFile);
    var projectPath = currentPath.Substring(0, currentPath.IndexOf(@"\T4Tools"));
    var path ="";
    foreach(var modelType in modelTypes)
    {
        var iRepositoryTemplate = new IServicesTemplate(modelType);
        path = projectPath + @"\IServices";
        iRepositoryTemplate.Output.Encoding = Encoding.UTF8;
        iRepositoryTemplate.RenderToFile(Path.Combine(path, iRepositoryTemplate.FileName));

        var repositoryTemplate = new ServicesTemplate(modelType);
        path = projectPath + @"\Services";
        repositoryTemplate.Output.Encoding = Encoding.UTF8;
        repositoryTemplate.RenderToFile(Path.Combine(path, repositoryTemplate.FileName));
    }
#>